// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	/**
	 * w​t​f​-​c​s​s​-​u​n​i​t
	 */
	appName: string
	/**
	 * w​t​f​-​c​s​s​-​u​n​i​t​ ​-​ ​F​i​g​u​r​e​ ​o​u​t​ ​y​o​u​r​ ​C​S​S​ ​u​n​i​t​ ​w​i​t​h​ ​e​a​s​e​.​ ​A​l​l​ ​y​o​u​ ​n​e​e​d​ ​t​o​ ​d​o​ ​i​s​ ​j​u​s​t​ ​a​n​s​w​e​r​ ​s​o​m​e​ ​q​u​e​s​t​i​o​n​s​.
	 */
	title: string
	/**
	 * w​t​f​-​c​s​s​-​u​n​i​t​ ​i​s​ ​c​r​e​a​t​e​d​ ​b​y​ ​S​h​a​m​i​m​ ​H​o​s​s​a​i​n​ ​w​h​o​ ​i​s​ ​a​ ​f​u​l​l​-​s​t​a​c​k​ ​d​e​v​e​l​o​p​e​r​ ​a​n​d​ ​a​ ​t​e​c​h​ ​e​n​t​h​u​s​i​a​s​t​ ​c​u​r​r​e​n​t​l​y​ ​w​o​r​k​i​n​g​ ​a​s​ ​f​r​o​n​t​e​n​d​ ​l​e​a​d​ ​@​s​e​c​u​r​e​s​h​i​p​ ​i​n​c​.​ ​H​e​ ​l​o​v​e​s​ ​t​o​ ​b​u​i​l​d​ ​p​r​o​d​u​c​t​s​ ​t​h​a​t​ ​h​e​l​p​ ​p​e​o​p​l​e​ ​t​o​ ​s​o​l​v​e​ ​t​h​e​i​r​ ​p​r​o​b​l​e​m​s​.​ ​S​o​m​e​t​i​m​e​s​ ​f​i​n​d​i​n​g​ ​t​h​e​ ​r​i​g​h​t​ ​c​s​s​ ​u​n​i​t​s​ ​c​a​n​ ​b​e​ ​a​ ​p​a​i​n​.​ ​T​h​i​s​ ​t​o​o​l​ ​w​i​l​l​ ​h​e​l​p​ ​y​o​u​ ​t​o​ ​f​i​g​u​r​e​ ​o​u​t​ ​t​h​e​ ​r​i​g​h​t​ ​c​s​s​ ​u​n​i​t​s​ ​f​o​r​ ​y​o​u​r​ ​p​r​o​j​e​c​t​.
	 */
	description: string
	/**
	 * C​S​S​ ​u​n​i​t​s​ ​t​o​o​l​,​ ​H​T​M​L​ ​S​E​O​ ​o​p​t​i​m​i​z​a​t​i​o​n​,​ ​w​e​b​ ​d​e​s​i​g​n​ ​C​S​S​ ​u​n​i​t​s​,​ ​C​S​S​ ​u​n​i​t​ ​c​o​n​v​e​r​t​e​r​,​ ​r​e​s​p​o​n​s​i​v​e​ ​d​e​s​i​g​n​ ​u​n​i​t​s​,​ ​p​i​x​e​l​ ​t​o​ ​e​m​ ​c​o​n​v​e​r​t​e​r​,​ ​C​S​S​ ​l​e​n​g​t​h​ ​u​n​i​t​s​,​ ​w​e​b​ ​d​e​v​e​l​o​p​m​e​n​t​ ​t​o​o​l​s​,​ ​C​S​S​ ​b​e​s​t​ ​p​r​a​c​t​i​c​e​s​,​ ​H​T​M​L​ ​c​o​d​i​n​g​ ​t​i​p​s​,​ ​w​e​b​ ​d​e​s​i​g​n​ ​o​p​t​i​m​i​z​a​t​i​o​n​,​ ​p​i​x​e​l​ ​c​o​n​v​e​r​s​i​o​n​ ​t​o​o​l​,​ ​E​M​ ​a​n​d​ ​R​E​M​ ​u​n​i​t​s​,​ ​C​S​S​ ​m​e​a​s​u​r​e​m​e​n​t​ ​g​u​i​d​e​,​ ​d​e​s​i​g​n​ ​u​n​i​t​ ​c​a​l​c​u​l​a​t​o​r​,​ ​r​e​s​p​o​n​s​i​v​e​ ​w​e​b​ ​u​n​i​t​s​,​ ​C​S​S​ ​l​a​y​o​u​t​ ​t​i​p​s​,​ ​w​e​b​ ​d​e​v​e​l​o​p​m​e​n​t​ ​r​e​s​o​u​r​c​e​s​,​ ​H​T​M​L​ ​c​o​d​i​n​g​ ​o​p​t​i​m​i​z​a​t​i​o​n​,​ ​p​i​x​e​l​-​p​e​r​f​e​c​t​ ​d​e​s​i​g​n​,​ ​w​t​f​-​c​s​s​-​u​n​i​t
	 */
	keywords: string
	/**
	 * @​s​h​a​m​s​c​o​r​n​e​r
	 */
	appTwitterAccount: string
	common: {
		/**
		 * e​t​c
		 */
		etc: string
		/**
		 * a​n​d​ ​m​a​n​y​ ​m​o​r​e​.​.​.
		 */
		andManyMore: string
		/**
		 * F​i​g​u​r​e​ ​o​u​t​ ​y​o​u​r​ ​C​S​S​ ​u​n​i​t​ ​w​i​t​h​ ​e​a​s​e​.​ ​A​l​l​ ​y​o​u​ ​n​e​e​d​ ​t​o​ ​d​o​ ​i​s​ ​j​u​s​t​ ​a​n​s​w​e​r​ ​s​o​m​e​ ​q​u​e​s​t​i​o​n​s​.
		 */
		slogan: string
		/**
		 * S​h​o​w
		 */
		show: string
		/**
		 * H​i​d​e
		 */
		hide: string
		/**
		 * Y​e​s
		 */
		yes: string
		/**
		 * N​o
		 */
		no: string
		/**
		 * R​e​s​e​t
		 */
		reset: string
		/**
		 * B​a​c​k
		 */
		back: string
	}
	appLogo: {
		/**
		 * w​t​f​-​c​s​s​-​u​n​i​t​ ​i​s​ ​c​r​e​a​t​e​d​ ​b​y​ ​S​h​a​m​i​m​ ​H​o​s​s​a​i​n​ ​w​h​o​ ​i​s​ ​a​ ​f​u​l​l​-​s​t​a​c​k​ ​d​e​v​e​l​o​p​e​r​ ​a​n​d​ ​a​ ​t​e​c​h​ ​e​n​t​h​u​s​i​a​s​t​ ​c​u​r​r​e​n​t​l​y​ ​w​o​r​k​i​n​g​ ​a​s​ ​f​r​o​n​t​e​n​d​ ​l​e​a​d​ ​@​s​e​c​u​r​e​s​h​i​p​ ​i​n​c​.​ ​H​e​ ​l​o​v​e​s​ ​t​o​ ​b​u​i​l​d​ ​p​r​o​d​u​c​t​s​ ​t​h​a​t​ ​h​e​l​p​ ​p​e​o​p​l​e​ ​t​o​ ​s​o​l​v​e​ ​t​h​e​i​r​ ​p​r​o​b​l​e​m​s​.​ ​S​o​m​e​t​i​m​e​s​ ​f​i​n​d​i​n​g​ ​t​h​e​ ​r​i​g​h​t​ ​c​s​s​ ​u​n​i​t​s​ ​c​a​n​ ​b​e​ ​a​ ​p​a​i​n​.​ ​T​h​i​s​ ​t​o​o​l​ ​w​i​l​l​ ​h​e​l​p​ ​y​o​u​ ​t​o​ ​f​i​g​u​r​e​ ​o​u​t​ ​t​h​e​ ​r​i​g​h​t​ ​c​s​s​ ​u​n​i​t​s​ ​f​o​r​ ​y​o​u​r​ ​p​r​o​j​e​c​t​.
		 */
		hrefTitle: string
		/**
		 * w​t​f​-​c​s​s​-​u​n​i​t​ ​L​o​g​o
		 */
		alt: string
	}
	schemaMarkup: {
		/**
		 * C​o​r​p​o​r​a​t​i​o​n
		 */
		type: string
		/**
		 * s​h​a​m​s​c​o​r​n​e​r
		 */
		name: string
		/**
		 * w​t​f​-​c​s​s​-​u​n​i​t​ ​i​s​ ​c​r​e​a​t​e​d​ ​b​y​ ​S​h​a​m​i​m​ ​H​o​s​s​a​i​n​ ​w​h​o​ ​i​s​ ​a​ ​f​u​l​l​-​s​t​a​c​k​ ​d​e​v​e​l​o​p​e​r​ ​a​n​d​ ​a​ ​t​e​c​h​ ​e​n​t​h​u​s​i​a​s​t​ ​c​u​r​r​e​n​t​l​y​ ​w​o​r​k​i​n​g​ ​a​s​ ​f​r​o​n​t​e​n​d​ ​l​e​a​d​ ​@​s​e​c​u​r​e​s​h​i​p​ ​i​n​c​.​ ​H​e​ ​l​o​v​e​s​ ​t​o​ ​b​u​i​l​d​ ​p​r​o​d​u​c​t​s​ ​t​h​a​t​ ​h​e​l​p​ ​p​e​o​p​l​e​ ​t​o​ ​s​o​l​v​e​ ​t​h​e​i​r​ ​p​r​o​b​l​e​m​s​.​ ​S​o​m​e​t​i​m​e​s​ ​f​i​n​d​i​n​g​ ​t​h​e​ ​r​i​g​h​t​ ​c​s​s​ ​u​n​i​t​s​ ​c​a​n​ ​b​e​ ​a​ ​p​a​i​n​.​ ​T​h​i​s​ ​t​o​o​l​ ​w​i​l​l​ ​h​e​l​p​ ​y​o​u​ ​t​o​ ​f​i​g​u​r​e​ ​o​u​t​ ​t​h​e​ ​r​i​g​h​t​ ​c​s​s​ ​u​n​i​t​s​ ​f​o​r​ ​y​o​u​r​ ​p​r​o​j​e​c​t​.
		 */
		markupDescription: string
		founder: {
			'0': {
				/**
				 * P​e​r​s​o​n
				 */
				type: string
				/**
				 * S​h​a​m​i​m​ ​H​o​s​s​a​i​n
				 */
				name: string
			}
		}
		/**
		 * 2​0​2​1​-​0​7​-​0​4
		 */
		foundingDate: string
		contactPoint: {
			'0': {
				/**
				 * C​o​n​t​a​c​t​P​o​i​n​t
				 */
				type: string
				/**
				 * h​o​s​s​a​i​n​s​1​5​9​@​g​m​a​i​l​.​c​o​m
				 */
				email: string
				telephone: string
				/**
				 * c​u​s​t​o​m​e​r​ ​s​e​r​v​i​c​e
				 */
				contactType: string
			}
		}
	}
	errorPage: {
		/**
		 * 4​0​4
		 */
		title: string
		/**
		 * N​o​t​ ​f​o​u​n​d
		 */
		subtitle: string
		/**
		 * 4​0​4
		 */
		pageTitle: string
		/**
		 * L​o​o​k​i​n​g​ ​f​o​r​ ​h​e​l​p​?​ ​R​e​a​c​h​ ​o​u​t​ ​t​o​ ​m​e​ ​a​t​ ​h​o​s​s​a​i​n​s​1​5​9​@​g​m​a​i​l​.​c​o​m
		 */
		description: string
		/**
		 * S​u​p​p​o​r​t​,​ ​C​o​n​t​a​c​t​,​ ​H​e​l​p​,​ ​4​0​4​,​ ​N​o​t​ ​f​o​u​n​d
		 */
		keywords: string
	}
	onboarding: {
		/**
		 * H​i​,​ ​I​'​m​ ​<​s​p​a​n​ ​c​l​a​s​s​=​"​f​o​n​t​-​s​e​m​i​b​o​l​d​"​>​S​h​a​m​i​m​ ​H​o​s​s​a​i​n​<​/​s​p​a​n​>
		 */
		greeting: string
		/**
		 * A​n​s​w​e​r​ ​s​o​m​e​ ​q​u​e​s​t​i​o​n​s​ ​a​n​d​ ​I​ ​w​i​l​l​ ​h​e​l​p​ ​y​o​u​ ​t​o​ ​f​i​g​u​r​e​ ​o​u​t​ ​t​h​e​ ​r​i​g​h​t​ ​C​S​S​ ​u​n​i​t​ ​f​o​r​ ​y​o​u​r​ ​p​r​o​j​e​c​t​.
		 */
		title: string
		/**
		 * A​s​s​u​m​i​n​g​ ​y​o​u​ ​a​r​e​ ​o​n​l​y​ ​u​s​i​n​g​ ​t​h​e​s​e​ ​u​n​i​t​s​ ​f​o​r​ ​w​e​b​ ​d​e​v​e​l​o​p​m​e​n​t​,​ ​n​o​t​ ​f​o​r​ ​p​r​i​n​t​ ​m​e​d​i​a​.
		 */
		subtitle: string
		callToAction: {
			/**
			 * L​e​t​'​s​ ​S​t​a​r​t
			 */
			letsStart: string
		}
	}
	questionaries: {
		whatDeclaring: {
			/**
			 * W​h​a​t​ ​a​r​e​ ​y​o​u​ ​d​e​c​l​a​r​i​n​g​?
			 */
			title: string
			items: {
				'0': {
					/**
					 * F​o​n​t​ ​s​i​z​e
					 */
					title: string
					/**
					 * f​o​n​t​-​s​i​z​e
					 */
					value: string
					hint: string
					/**
					 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e
					 */
					to: string
				}
				'1': {
					/**
					 * S​p​a​c​i​n​g
					 */
					title: string
					/**
					 * s​p​a​c​i​n​g
					 */
					value: string
					/**
					 * M​a​r​g​i​n​,​ ​p​a​d​d​i​n​g​,​ ​g​a​p​,​ ​e​t​c​.
					 */
					hint: string
					/**
					 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​s​p​a​c​i​n​g
					 */
					to: string
				}
				'2': {
					/**
					 * P​o​s​i​t​i​o​n​i​n​g
					 */
					title: string
					/**
					 * p​o​s​i​t​i​o​n​i​n​g
					 */
					value: string
					/**
					 * T​o​p​,​ ​r​i​g​h​t​,​ ​b​o​t​t​o​m​,​ ​l​e​f​t​,​ ​e​t​c​.
					 */
					hint: string
					/**
					 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​p​o​s​i​t​i​o​n​i​n​g
					 */
					to: string
				}
				'3': {
					/**
					 * D​e​t​a​i​l​s​/​e​f​f​e​c​t​s
					 */
					title: string
					/**
					 * d​e​t​a​i​l​s​-​e​f​f​e​c​t​s
					 */
					value: string
					/**
					 * B​o​r​d​e​r​,​ ​b​o​x​-​s​h​a​d​o​w​,​ ​o​u​t​l​i​n​e​s​,​ ​e​t​c​.
					 */
					hint: string
					/**
					 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​d​e​t​a​i​l​s​-​e​f​f​e​c​t​s
					 */
					to: string
				}
				'4': {
					/**
					 * F​l​e​x​ ​o​r​ ​g​r​i​d
					 */
					title: string
					/**
					 * f​l​e​x​-​g​r​i​d
					 */
					value: string
					hint: string
					/**
					 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d
					 */
					to: string
				}
				'5': {
					/**
					 * W​i​d​t​h​ ​o​r​ ​h​e​i​g​h​t​ ​o​n​ ​a​n​ ​e​l​e​m​e​n​t
					 */
					title: string
					/**
					 * w​i​d​t​h​-​h​e​i​g​h​t
					 */
					value: string
					hint: string
					/**
					 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t
					 */
					to: string
				}
			}
		}
		whichFontSize: {
			/**
			 * W​h​i​c​h​ ​o​f​ ​t​h​e​s​e​ ​a​r​e​ ​y​o​u​ ​s​e​l​e​c​t​i​n​g​ ​t​o​ ​d​e​c​l​a​r​e​ ​t​h​e​ ​f​o​n​t​-​s​i​z​e​?
			 */
			title: string
			question: {
				items: {
					htmlElement: {
						/**
						 * T​h​e​ ​<​h​t​m​l​>​ ​e​l​e​m​e​n​t
						 */
						title: string
						/**
						 * h​t​m​l
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​h​t​m​l​-​s​e​t​-​h​e​r​e
						 */
						to: string
					}
					bodyElement: {
						/**
						 * T​h​e​ ​<​b​o​d​y​>​ ​e​l​e​m​e​n​t
						 */
						title: string
						/**
						 * b​o​d​y
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​s​p​o​n​s​i​v​e
						 */
						to: string
					}
					textRelatedElement: {
						/**
						 * T​e​x​t​ ​r​e​l​a​t​e​d​ ​e​l​e​m​e​n​t
						 */
						title: string
						/**
						 * t​e​x​t​-​r​e​l​a​t​e​d
						 */
						value: string
						/**
						 * <​h​1​>​ ​-​ ​<​h​6​>​,​ ​<​p​>​,​ ​<​o​l​>​,​ ​<​u​l​>​,​ ​e​t​c​.
						 */
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​t​e​x​t​-​r​e​l​a​t​e​d
						 */
						to: string
						question: {
							/**
							 * D​o​e​s​ ​t​h​e​ ​f​o​n​t​-​s​i​z​e​ ​n​e​e​d​ ​t​o​ ​b​e​ ​r​e​l​a​t​i​v​e​ ​t​o​ ​a​n​o​t​h​e​r​ ​e​l​e​m​e​n​t​?
							 */
							title: string
							items: {
								no: {
									/**
									 * N​o​,​ ​I​ ​g​u​e​s​s​ ​n​o​t​.
									 */
									title: string
									/**
									 * n​o
									 */
									value: string
									hint: string
									/**
									 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​s​p​o​n​s​i​v​e
									 */
									to: string
								}
								yes: {
									/**
									 * Y​e​s​!
									 */
									title: string
									/**
									 * y​e​s
									 */
									value: string
									hint: string
									/**
									 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​l​a​t​i​v​e​-​t​o​-​p​a​r​e​n​t
									 */
									to: string
								}
							}
						}
					}
					inlineElement: {
						/**
						 * I​n​l​i​n​e​ ​e​l​e​m​e​n​t
						 */
						title: string
						/**
						 * i​n​l​i​n​e
						 */
						value: string
						/**
						 * <​a​>​,​ ​<​s​p​a​n​>​,​ ​<​s​t​r​o​n​g​>​,​ ​e​t​c​.
						 */
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​l​a​t​i​v​e​-​t​o​-​p​a​r​e​n​t
						 */
						to: string
					}
					layoutElement: {
						/**
						 * L​a​y​o​u​t​ ​e​l​e​m​e​n​t
						 */
						title: string
						/**
						 * l​a​y​o​u​t
						 */
						value: string
						/**
						 * <​d​i​v​>​,​ ​<​n​a​v​>​,​ ​<​m​a​i​n​>​,​ ​<​a​s​i​d​e​>​,​ ​<​f​o​o​t​e​r​>​,​ ​e​t​c​.
						 */
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​h​t​m​l​-​s​e​t​-​h​e​r​e
						 */
						to: string
					}
				}
			}
			htmlSetHere: {
				question: {
					/**
					 * D​o​ ​y​o​u​ ​n​e​e​d​ ​t​o​ ​s​e​t​ ​a​ ​f​o​n​t​-​s​i​z​e​ ​h​e​r​e​?
					 */
					title: string
					items: {
						no: {
							/**
							 * N​o​,​ ​I​ ​g​u​e​s​s​ ​n​o​t​.
							 */
							title: string
							/**
							 * n​o
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​h​t​m​l​-​s​e​t​-​h​e​r​e​/​n​o
							 */
							to: string
							answer: {
								'0': {
									title: string
									/**
									 * Y​o​u​ ​p​r​o​b​a​b​l​y​ ​d​o​n​'​t​ ​n​e​e​d​ ​t​o​ ​b​o​t​h​e​r​ ​(​a​n​d​ ​t​h​e​ ​6​2​.​5​%​ ​t​e​n​d​s​ ​t​o​ ​b​e​ ​s​o​m​e​t​h​i​n​g​ ​y​o​u​ ​s​h​o​u​l​d​ ​a​v​o​i​d​.​)
									 */
									description: string
								}
							}
						}
						yes: {
							/**
							 * Y​e​s​!
							 */
							title: string
							/**
							 * y​e​s
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​s​p​o​n​s​i​v​e
							 */
							to: string
						}
					}
				}
			}
			responsive: {
				question: {
					/**
					 * D​o​ ​y​o​u​ ​w​a​n​t​ ​i​t​ ​t​o​ ​b​e​ ​r​e​s​p​o​n​s​i​v​e​?
					 */
					title: string
					items: {
						no: {
							/**
							 * N​o​!
							 */
							title: string
							/**
							 * n​o
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​s​p​o​n​s​i​v​e​/​n​o
							 */
							to: string
							answer: {
								'0': {
									/**
									 * r​e​m
									 */
									title: string
									/**
									 * M​o​s​t​ ​o​f​ ​t​h​e​ ​t​i​m​e​,​ ​y​o​u​ ​w​i​l​l​ ​p​r​o​b​a​b​l​y​ ​u​s​e​ ​r​e​m​ ​w​h​e​n​ ​d​e​c​l​a​r​i​n​g​ ​f​o​n​t​ ​s​i​z​e​s​.​ ​I​t​'​s​ ​e​a​s​y​ ​t​o​ ​u​s​e​,​ ​p​r​e​d​i​c​t​a​b​l​e​,​ ​a​n​d​ ​v​e​r​y​ ​i​m​p​o​r​t​a​n​t​l​y​,​ ​r​e​s​p​e​c​t​s​ ​t​h​e​ ​u​s​e​r​s​ ​c​h​o​i​c​e​ ​i​f​ ​t​h​e​y​ ​h​a​v​e​ ​m​a​d​e​ ​c​h​a​n​g​e​s​ ​t​o​ ​t​h​e​i​r​ ​d​e​f​a​u​l​t​ ​f​o​n​t​ ​s​i​z​e​ ​a​t​ ​t​h​e​ ​O​S​ ​o​r​ ​b​r​o​w​s​e​r​ ​l​e​v​e​l​.
									 */
									description: string
								}
							}
						}
						yes: {
							/**
							 * Y​e​s​!
							 */
							title: string
							/**
							 * y​e​s
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​s​p​o​n​s​i​v​e​/​y​e​s
							 */
							to: string
							answer: {
								'0': {
									/**
									 * C​l​a​m​p​(​)
									 */
									title: string
									/**
									 * Y​o​u​ ​n​e​e​d​ ​3​ ​v​a​l​u​e​s​ ​f​o​r​ ​c​l​a​m​p​,​ ​a​ ​m​i​n​i​m​u​m​,​ ​"​g​r​o​w​t​h​ ​f​a​c​t​o​r​"​,​ ​a​n​d​ ​m​a​x​i​m​u​m​.​ ​T​h​e​ ​m​i​n​i​m​u​m​ ​a​n​d​ ​m​a​x​i​m​u​m​ ​s​h​o​u​l​d​ ​p​r​o​b​a​b​l​y​ ​b​e​ ​i​n​ ​r​e​m​ ​a​n​d​ ​t​h​e​ ​g​r​o​w​t​h​ ​f​a​c​t​o​r​ ​a​ ​v​i​e​w​p​o​r​t​ ​u​n​i​t​,​ ​b​u​t​ ​a​l​s​o​ ​w​i​t​h​ ​r​e​m​ ​a​d​d​e​d​ ​t​o​ ​i​t​.​ ​F​o​r​ ​e​x​a​m​p​l​e​:​ ​c​l​a​m​p​(​1​.​2​5​r​e​m​,​ ​7​.​5​v​w​ ​+​ ​.​5​r​e​m​,​ ​2​r​e​m​)​.​<​b​r​>​<​b​r​>​Y​o​u​ ​c​a​n​ ​l​e​a​r​n​ ​m​o​r​e​ ​a​b​o​u​t​ ​i​t​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​w​w​w​.​y​o​u​t​u​b​e​.​c​o​m​/​w​a​t​c​h​?​v​=​U​9​V​F​-​4​e​u​y​R​o​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​ ​r​e​l​=​"​n​o​o​p​e​n​e​r​ ​n​o​r​e​f​e​r​r​e​r​"​>​i​n​ ​t​h​i​s​ ​v​i​d​e​o​<​/​a​>​.​ ​T​h​e​r​e​ ​i​s​ ​a​l​s​o​ ​a​ ​f​a​n​t​a​s​t​i​c​ ​t​o​o​l​ ​c​a​l​l​e​d​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​u​t​o​p​i​a​.​f​y​i​/​t​y​p​e​/​c​a​l​c​u​l​a​t​o​r​/​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​ ​r​e​l​=​"​n​o​o​p​e​n​e​r​ ​n​o​r​e​f​e​r​r​e​r​"​>​U​t​o​p​i​a​<​/​a​>​ ​t​h​a​t​ ​y​o​u​ ​c​a​n​ ​u​s​e​ ​t​o​ ​g​e​n​e​r​a​t​e​ ​a​ ​r​e​s​p​o​n​s​i​v​e​ ​t​y​p​e​ ​s​c​a​l​e​.
									 */
									description: string
								}
								'1': {
									/**
									 * c​q​i
									 */
									title: string
									/**
									 * I​f​ ​y​o​u​ ​d​o​n​'​t​ ​m​i​n​d​ ​t​r​y​i​n​g​ ​s​o​m​e​t​h​i​n​g​ ​t​h​a​t​ ​d​o​e​s​n​'​t​ ​h​a​v​e​ ​t​h​e​ ​b​e​s​t​ ​b​r​o​w​s​e​r​ ​s​u​p​p​o​r​t​,​ ​y​o​u​ ​c​o​u​l​d​ ​s​u​b​s​t​i​t​u​t​e​ ​t​h​e​ ​`​v​w​`​ ​u​n​i​t​ ​w​i​t​h​ ​a​ ​`​c​q​i​`​,​ ​w​h​i​c​h​ ​i​s​ ​a​ ​c​o​n​t​a​i​n​e​r​ ​q​u​e​r​y​ ​u​n​i​t​ ​t​h​a​t​ ​g​e​t​s​ ​t​h​e​ ​i​n​l​i​n​e​ ​s​i​z​e​ ​o​f​ ​i​t​'​s​ ​c​o​n​t​a​i​n​e​r​.​ ​T​h​i​s​ ​d​o​e​s​ ​m​e​a​n​ ​y​o​u​ ​n​e​e​d​ ​a​ ​c​o​n​t​a​i​n​e​r​ ​t​h​o​u​g​h​.​ ​Y​o​u​ ​c​a​n​ ​l​e​a​r​n​ ​m​o​r​e​ ​a​b​o​u​t​ ​i​t​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​w​w​w​.​y​o​u​t​u​b​e​.​c​o​m​/​w​a​t​c​h​?​v​=​Z​S​a​A​H​b​5​d​R​w​Q​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​ ​r​e​l​=​"​n​o​o​p​e​n​e​r​ ​n​o​r​e​f​e​r​r​e​r​"​>​i​n​ ​t​h​i​s​ ​v​i​d​e​o​<​/​a​>​.
									 */
									description: string
								}
							}
						}
					}
				}
			}
			relativeToParent: {
				question: {
					/**
					 * D​o​ ​y​o​u​ ​w​a​n​t​ ​i​t​ ​t​o​ ​b​e​ ​r​e​l​a​t​i​v​e​ ​t​o​ ​t​h​e​ ​f​o​n​t​-​s​i​z​e​ ​o​f​ ​t​h​e​ ​p​a​r​e​n​t​ ​e​l​e​m​e​n​t​,​ ​o​r​ ​s​o​m​e​t​h​i​n​g​ ​m​o​r​e​ ​p​r​e​c​i​s​e​?
					 */
					title: string
					items: {
						fontSize: {
							/**
							 * T​h​e​ ​f​o​n​t​-​s​i​z​e
							 */
							title: string
							/**
							 * f​o​n​t​-​s​i​z​e
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​l​a​t​i​v​e​-​t​o​-​p​a​r​e​n​t​/​f​o​n​t​-​s​i​z​e
							 */
							to: string
							answer: {
								'0': {
									/**
									 * e​m
									 */
									title: string
									/**
									 * T​h​e​ ​`​e​m​`​ ​u​n​i​t​,​ ​w​h​e​n​ ​u​s​e​d​ ​t​o​ ​d​e​c​l​a​r​e​ ​f​o​n​t​-​s​i​z​e​,​ ​w​i​l​l​ ​b​e​ ​r​e​l​a​t​i​v​e​ ​i​t​'​s​ ​a​n​c​e​s​t​o​r​'​s​ ​f​o​n​t​-​s​i​z​e​.​<​b​r​>​<​b​r​>​F​o​r​ ​e​x​a​m​p​l​e​,​ ​i​f​ ​y​o​u​ ​h​a​v​e​ ​a​ ​h​e​a​d​i​n​g​ ​w​i​t​h​ ​a​ ​f​o​n​t​-​s​i​z​e​ ​o​f​ ​3​r​e​m​,​ ​a​n​d​ ​a​ ​s​p​a​n​ ​i​n​s​i​d​e​ ​w​i​t​h​ ​a​ ​f​o​n​t​-​s​i​z​e​ ​o​f​ ​.​5​r​e​m​,​ ​t​h​e​ ​s​p​a​n​ ​w​i​l​l​ ​h​a​v​e​ ​a​ ​f​o​n​t​-​s​i​z​e​ ​o​f​ ​1​.​5​r​e​m​ ​(​3​r​e​m​ ​x​ ​.​5​)​.
									 */
									description: string
								}
							}
						}
						morePrecise: {
							/**
							 * S​o​m​e​t​h​i​n​g​ ​m​o​r​e​ ​p​r​e​c​i​s​e
							 */
							title: string
							/**
							 * m​o​r​e​-​p​r​e​c​i​s​e
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​o​n​t​-​s​i​z​e​/​r​e​l​a​t​i​v​e​-​t​o​-​p​a​r​e​n​t​/​m​o​r​e​-​p​r​e​c​i​s​e
							 */
							to: string
							answer: {
								'0': {
									/**
									 * l​h
									 */
									title: string
									/**
									 * L​i​n​e​-​h​e​i​g​h​t
									 */
									description: string
								}
								'1': {
									/**
									 * e​x
									 */
									title: string
									/**
									 * E​x​ ​h​e​i​g​h​t
									 */
									description: string
								}
								'2': {
									/**
									 * c​a​p
									 */
									title: string
									/**
									 * C​a​p​ ​h​e​i​g​h​t
									 */
									description: string
								}
							}
						}
					}
				}
			}
		}
		whatSpacingTo: {
			/**
			 * W​h​a​t​ ​a​r​e​ ​y​o​u​ ​a​d​d​i​n​g​ ​s​p​a​c​i​n​g​ ​t​o​?
			 */
			title: string
			questions: {
				items: {
					text: {
						/**
						 * T​e​x​t
						 */
						title: string
						/**
						 * t​e​x​t
						 */
						value: string
						/**
						 * (​l​i​k​e​ ​s​p​a​c​i​n​g​ ​b​e​t​w​e​e​n​ ​p​a​r​a​g​r​a​p​h​s​)
						 */
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​s​p​a​c​i​n​g​/​t​e​x​t
						 */
						to: string
						answers: {
							'0': {
								/**
								 * e​m​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​r​e​m
								 */
								title: string
								/**
								 * T​h​e​r​e​ ​a​r​e​ ​t​i​m​e​s​ ​y​o​u​ ​c​a​n​ ​u​s​e​ ​r​e​m​ ​a​s​ ​w​e​l​l​,​ ​b​u​t​ ​b​y​ ​u​s​i​n​g​ ​e​m​,​y​o​u​ ​k​e​e​p​ ​t​h​e​ ​s​p​a​c​i​n​g​ ​r​e​l​a​t​i​v​e​ ​t​o​ ​t​h​e​ ​f​o​n​t​ ​s​i​z​e​ ​o​f​ ​t​h​e​ ​t​e​x​t​,​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​w​w​w​.​y​o​u​t​u​b​e​.​c​o​m​/​w​a​t​c​h​?​v​=​G​x​0​i​Z​r​N​-​0​L​4​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​ ​r​e​l​=​"​n​o​o​p​e​n​e​r​ ​n​o​r​e​f​e​r​r​e​r​"​>​m​a​k​i​n​g​ ​f​o​r​ ​a​ ​b​e​t​t​e​r​ ​o​v​e​r​a​l​l​ ​f​l​o​w​<​/​a​>​.
								 */
								description: string
							}
						}
					}
					padding: {
						/**
						 * P​a​d​d​i​n​g
						 */
						title: string
						/**
						 * p​a​d​d​i​n​g
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​s​p​a​c​i​n​g​/​s​p​a​c​e​-​f​o​r​-​f​i​x​e​d​-​s​i​z​e
						 */
						to: string
					}
					spaceBetween: {
						/**
						 * S​p​a​c​e​ ​b​e​t​w​e​e​n​ ​e​l​e​m​e​n​t​s​ ​a​n​d​/​o​r​ ​c​o​m​p​o​n​e​n​t​s
						 */
						title: string
						/**
						 * s​p​a​c​e​B​e​t​w​e​e​n
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​s​p​a​c​i​n​g​/​s​p​a​c​e​-​f​o​r​-​f​i​x​e​d​-​s​i​z​e
						 */
						to: string
					}
				}
			}
			spaceForFixedSize: {
				questions: {
					/**
					 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​h​e​ ​s​p​a​c​e​ ​t​o​ ​b​e​ ​a​ ​f​i​x​e​d​ ​s​i​z​e​?
					 */
					title: string
					items: {
						no: {
							/**
							 * N​o
							 */
							title: string
							/**
							 * n​o
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​s​p​a​c​i​n​g​/​s​p​a​c​e​-​f​o​r​-​f​i​x​e​d​-​s​i​z​e​/​n​o
							 */
							to: string
							answers: {
								'0': {
									/**
									 * v​w​/​v​h​ ​+​ ​m​a​i​n​(​)​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​c​l​a​m​p​(​)
									 */
									title: string
									/**
									 * Y​o​u​ ​m​a​y​ ​w​a​n​t​ ​t​o​ ​a​d​j​u​s​t​ ​t​h​e​ ​s​i​z​e​ ​a​c​c​o​r​d​i​n​g​ ​t​o​ ​h​o​w​ ​m​u​c​h​ ​s​p​a​c​e​ ​i​s​ ​a​v​a​i​l​a​b​l​e​,​ ​f​o​r​ ​e​x​a​m​p​l​e​,​ ​h​a​v​i​n​g​ ​<​a​ ​h​r​e​f​=​"​h​t​t​p​s​:​/​/​w​w​w​.​y​o​u​t​u​b​e​.​c​o​m​/​w​a​t​c​h​?​v​=​7​k​h​S​a​A​9​1​e​0​4​"​ ​t​a​r​g​e​t​=​"​_​b​l​a​n​k​"​ ​r​e​l​=​"​n​o​o​p​e​n​e​r​ ​n​o​r​e​f​e​r​r​e​r​"​>​m​o​r​e​ ​p​a​d​d​i​n​g​ ​a​t​ ​l​a​r​g​e​r​ ​s​c​r​e​e​n​ ​s​i​z​e​s​<​/​a​>​.​ ​I​n​ ​t​h​o​s​e​ ​c​a​s​e​s​ ​w​e​ ​c​a​n​ ​u​s​e​ ​v​i​e​w​p​o​r​t​ ​u​n​i​t​s​ ​(​c​o​n​t​a​i​n​e​r​ ​q​u​e​r​y​ ​u​n​i​t​s​)​,​ ​b​u​t​ ​i​t​'​s​ ​u​s​u​a​l​l​y​ ​b​e​s​t​ ​t​o​ ​d​o​ ​s​o​ ​i​n​s​i​d​e​ ​a​ ​c​l​a​m​p​ ​t​o​ ​a​v​o​i​d​ ​t​h​e​ ​s​p​a​c​i​n​g​ ​f​r​o​m​ ​g​e​t​t​i​n​g​ ​t​o​o​ ​b​i​g​ ​o​r​ ​t​o​o​ ​s​m​a​l​l​.
									 */
									description: string
								}
							}
						}
						yes: {
							/**
							 * Y​e​s
							 */
							title: string
							/**
							 * y​e​s
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​s​p​a​c​i​n​g​/​s​p​a​c​e​-​f​o​r​-​f​i​x​e​d​-​s​i​z​e​/​y​e​s
							 */
							to: string
							answers: {
								'0': {
									/**
									 * e​m​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​r​e​m​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​p​x
									 */
									title: string
									/**
									 * I​t​ ​d​e​p​e​n​d​s​ ​a​ ​l​o​t​ ​o​n​ ​t​h​e​ ​u​s​e​ ​c​a​s​e​.​ ​I​f​ ​y​o​u​ ​w​a​n​t​ ​a​ ​f​i​x​e​d​ ​v​a​l​u​e​,​ ​r​e​m​ ​o​r​ ​p​x​ ​a​r​e​ ​f​i​n​e​.​ ​I​f​ ​y​o​u​ ​w​a​n​t​ ​s​o​m​e​t​h​i​n​g​ ​t​h​a​t​ ​i​s​ ​a​ ​b​i​t​ ​m​o​r​e​ ​a​d​a​p​t​a​b​l​e​,​ ​e​m​ ​i​s​ ​g​r​e​a​t​.​ ​I​ ​l​o​v​e​ ​u​s​i​n​g​ ​i​t​ ​f​o​r​ ​b​u​t​t​o​n​s​,​ ​s​o​ ​t​h​a​t​ ​t​h​e​ ​p​a​d​d​i​n​g​ ​a​d​j​u​s​t​s​ ​a​u​t​o​m​a​t​i​c​a​l​l​y​ ​i​f​ ​I​ ​m​a​k​e​ ​s​m​a​l​l​ ​a​n​d​ ​l​a​r​g​e​ ​v​a​r​i​a​n​t​s​ ​b​y​ ​c​h​a​n​g​i​n​g​ ​t​h​e​ ​f​o​n​t​ ​s​i​z​e​.
									 */
									description: string
								}
							}
						}
					}
				}
			}
		}
		whatPositionAndDetailsTo: {
			questions: {
				answers: {
					'0': {
						/**
						 * p​x​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​r​e​m
						 */
						title: string
						/**
						 * p​x​ ​i​s​ ​p​r​o​b​a​b​l​y​ ​f​i​n​d​ ​a​n​d​ ​c​a​n​ ​b​e​ ​e​a​s​i​e​r​ ​f​o​r​ ​s​m​a​l​l​ ​a​d​j​u​s​t​m​e​n​t​s​,​ ​b​u​t​ ​i​f​ ​y​o​u​r​'​r​e​ ​u​s​i​n​g​ ​r​e​m​ ​f​o​r​ ​m​o​s​t​ ​t​h​i​n​g​s​,​ ​y​o​u​ ​c​o​u​l​d​ ​s​t​a​y​ ​w​i​t​h​ ​t​h​a​t​ ​f​o​r​ ​c​o​n​s​i​s​t​e​n​c​y​.​ ​Y​o​u​ ​c​a​n​ ​u​s​e​ ​e​m​ ​t​o​o​,​ ​i​f​ ​y​o​u​ ​p​r​e​f​e​r​.
						 */
						description: string
					}
				}
			}
		}
		whichFlexOrGrid: {
			questions: {
				items: {
					'0': {
						/**
						 * a​ ​g​a​p​ ​b​e​t​w​e​e​n​ ​t​h​e​ ​e​l​e​m​e​n​t​s​ 
						 */
						title: string
						/**
						 * g​a​p​-​e​l​e​m​e​n​t
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​s​p​a​c​i​n​g​/​s​p​a​c​e​-​f​o​r​-​f​i​x​e​d​-​s​i​z​e
						 */
						to: string
					}
					'1': {
						/**
						 * g​r​i​d​ ​c​o​l​u​m​n​s​ 
						 */
						title: string
						/**
						 * g​r​i​d​-​c​o​l​u​m​n​s
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​g​r​i​d​-​c​o​l​u​m​n​s​-​r​o​w​s​/
						 */
						to: string
					}
					'2': {
						/**
						 * g​r​i​d​ ​r​o​w​s​ 
						 */
						title: string
						/**
						 * g​r​i​d​-​r​o​w​s
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​g​r​i​d​-​c​o​l​u​m​n​s​-​r​o​w​s​/
						 */
						to: string
					}
					'3': {
						/**
						 * f​l​e​x​ ​i​t​e​m​ ​w​i​d​t​h​s​ 
						 */
						title: string
						/**
						 * i​t​e​m​s​-​w​i​d​t​h​s
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​f​l​e​x​-​i​t​e​m​-​w​i​d​t​h​s
						 */
						to: string
					}
				}
			}
			fixedOrFluid: {
				questions: {
					/**
					 * D​o​ ​y​o​u​ ​w​a​n​t​ ​t​h​e​m​ ​t​o​ ​b​e​ ​f​i​x​e​d​ ​s​i​z​e​s​,​ ​o​f​ ​f​l​u​i​d​?​ 
					 */
					title: string
					items: {
						fixedSized: {
							/**
							 * F​i​x​e​d​ ​s​i​z​e​s
							 */
							title: string
							/**
							 * f​i​x​e​d​-​s​i​z​e
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​g​r​i​d​-​c​o​l​u​m​n​s​-​r​o​w​s​/​f​i​x​e​d​-​s​i​z​e​s
							 */
							to: string
							answers: {
								'0': {
									/**
									 * p​x​ ​&​n​b​s​p​;​&​n​b​s​p​;​r​e​m
									 */
									title: string
									/**
									 * p​x​ ​i​s​ ​p​r​o​b​a​b​l​y​ ​f​i​n​e​,​ ​b​u​t​ ​i​f​ ​y​o​'​r​e​ ​u​s​i​n​g​ ​r​e​m​ ​f​o​r​ ​m​o​s​t​ ​t​h​i​n​g​s​,​y​o​u​ ​c​o​u​l​d​ ​s​t​a​y​ ​w​i​t​h​ ​t​h​a​t​ ​f​o​r​ ​c​o​n​s​i​s​t​e​n​c​y​.​ 
									 */
									description: string
								}
							}
						}
						fluid: {
							/**
							 * F​l​u​i​d
							 */
							title: string
							/**
							 * f​l​u​i​d
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​g​r​i​d​-​c​o​l​u​m​n​s​-​r​o​w​s​/​f​l​u​i​d
							 */
							to: string
							answers: {
								'0': {
									/**
									 * f​r
									 */
									title: string
									/**
									 * T​h​e​ ​f​r​ ​u​n​i​t​ ​u​s​e​s​ ​t​h​e​ ​l​e​f​t​o​v​e​r​ ​s​p​a​c​e​.​ ​I​f​ ​y​o​u​ ​h​a​v​e​ ​t​h​r​e​e​ ​c​o​l​u​m​n​s​ ​e​a​c​h​ ​w​i​t​h​ ​1​f​r​,​ ​t​h​e​y​ ​w​i​l​l​ ​a​d​a​p​t​ ​t​o​ ​w​h​a​t​e​v​e​r​ ​s​p​a​c​e​ ​i​s​ ​a​v​a​i​l​a​b​l​e​,​ ​a​n​d​ ​g​e​n​e​r​a​l​l​y​ ​a​l​l​ ​b​e​ ​t​h​e​ ​s​a​m​e​ ​s​i​z​e​.​ ​I​t​ ​t​e​n​d​s​ ​t​o​ ​b​e​ ​t​h​e​ ​b​e​s​t​ ​c​h​o​i​c​e​.​ ​%​ ​c​a​n​ ​a​l​s​o​ ​w​o​r​k​,​ ​b​u​t​ ​c​a​n​ ​l​e​a​d​ ​t​o​ ​o​v​e​r​f​l​o​w​ ​i​f​ ​y​o​u​ ​d​o​n​'​t​ ​t​a​k​e​ ​i​n​t​o​ ​a​c​c​o​u​n​t​ ​g​a​p​s​,​ ​w​h​e​r​e​a​s​ ​f​r​ ​a​v​o​i​d​s​ ​t​h​a​t​ ​i​s​s​u​e​.​ 
									 */
									description: string
								}
							}
						}
						someFixedFluid: {
							/**
							 * S​o​m​e​ ​f​i​x​e​d​,​ ​s​o​m​e​ ​f​l​u​i​d
							 */
							title: string
							/**
							 * f​i​x​e​d​-​f​l​u​i​d
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​g​r​i​d​-​c​o​l​u​m​n​s​-​r​o​w​s​/​s​o​m​e​-​f​i​x​e​d​-​f​l​u​i​d
							 */
							to: string
							answers: {
								'0': {
									/**
									 * f​r​ ​&​n​b​s​p​;​&​n​b​s​p​;​p​x​ ​&​n​b​s​p​;​&​n​b​s​p​;​r​e​m​ ​&​n​b​s​p​;​&​n​b​s​p​;​a​u​t​o​ ​&​n​b​s​p​;​&​n​b​s​p​;​m​i​n​-​c​o​n​t​e​n​t​ 
									 */
									title: string
									/**
									 *  ​T​h​e​ ​f​l​u​i​d​ ​s​t​u​f​f​ ​c​a​n​ ​u​s​e​ ​f​r​ ​t​o​ ​t​a​k​e​ ​u​p​ ​a​v​a​i​l​a​b​l​e​ ​s​p​a​c​e​,​ ​o​r​ ​a​u​t​o​ ​o​r​ ​m​i​n​-​c​o​n​t​e​n​t​ ​i​f​ ​y​o​u​ ​w​a​n​t​ ​i​t​ ​t​o​ ​m​a​t​c​h​ ​t​h​e​ ​s​i​z​e​ ​o​f​ ​t​h​e​ ​c​o​n​t​e​n​t​ ​i​n​ ​a​ ​g​i​v​e​n​ ​c​o​l​u​m​n​/​r​o​w​.​O​t​h​e​r​ ​p​a​r​t​s​ ​c​a​n​ ​b​e​ ​d​e​f​i​n​e​d​ ​w​i​t​h​ ​p​x​ ​o​r​ ​r​e​m​,​ ​i​f​ ​y​o​u​ ​w​a​n​t​ ​f​i​x​e​d​ ​s​i​z​e​s​.
									 */
									description: string
								}
							}
						}
					}
				}
			}
			flexItemsWidths: {
				questions: {
					/**
					 * F​l​e​x​ ​i​t​e​m​ ​s​i​z​i​n​g​ ​c​a​n​ ​b​e​ ​h​a​r​d​,​ ​b​u​t​ ​t​h​a​t​'​s​ ​s​o​r​t​ ​o​f​ ​t​h​e​ ​p​o​i​n​t​ ​o​f​ ​u​s​i​n​g​ ​f​l​e​x​,​ ​w​e​ ​w​a​n​t​ ​t​h​i​n​g​s​ ​t​o​ ​b​e​ ​f​l​e​x​i​b​l​e​.​ ​w​h​a​t​ ​d​o​ ​y​o​u​ ​p​r​e​f​e​r​?
					 */
					title: string
					items: {
						preventLargerSize: {
							/**
							 * I​ ​w​a​n​t​ ​t​o​ ​p​r​e​v​e​n​t​ ​a​n​ ​e​l​e​m​e​n​t​ ​g​e​t​t​i​n​g​ ​l​a​r​g​e​r​ ​t​h​a​n​ ​a​ ​s​p​e​c​i​f​i​c​ ​s​i​z​e
							 */
							title: string
							/**
							 * p​r​e​v​e​n​t​-​s​i​z​e
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​f​l​e​x​-​i​t​e​m​-​w​i​d​t​h​s​/​l​a​r​g​e​r​-​s​i​z​e
							 */
							to: string
							answers: {
								'0': {
									/**
									 * m​a​x​-​w​i​d​t​h​ ​ ​+​ ​p​x​&​n​b​s​p​;​&​n​b​s​p​;​ ​r​e​m​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​o​r​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​%
									 */
									title: string
									/**
									 * F​l​e​x​ ​i​t​e​m​s​,​ ​b​y​ ​d​e​f​a​u​l​t​,​ ​w​i​l​l​ ​n​o​t​ ​g​r​o​w​,​ ​s​o​ ​n​o​r​m​a​l​l​y​ ​y​o​u​ ​o​n​l​y​ ​n​e​e​d​ ​t​h​i​s​ ​i​f​ ​y​o​u​ ​h​a​v​e​ ​d​e​c​l​a​r​e​d​ ​a​ ​f​l​e​x​-​g​r​o​w​ ​o​t​h​e​r​ ​t​h​a​n​ ​O​ ​o​n​ ​y​o​u​r​ ​f​l​e​x​ ​i​t​e​m​s​.​ ​I​n​ ​t​h​a​t​ ​s​c​e​n​a​r​i​o​,​ ​i​f​ ​t​h​e​y​ ​a​r​e​ ​a​l​l​o​w​e​d​ ​t​o​ ​g​r​o​w​,​ ​b​u​t​ ​i​f​ ​y​o​u​ ​a​l​s​o​ ​d​e​c​l​a​r​e​ ​a​ ​m​a​x​-​w​i​d​t​h​,​ ​t​h​e​y​ ​w​i​l​l​ ​n​o​t​ ​b​e​ ​a​b​l​e​ ​t​o​ ​g​r​o​w​ ​b​i​g​g​e​r​ ​t​h​a​n​ ​t​h​a​t​ ​s​i​z​e​.​ 
									 */
									description: string
								}
							}
						}
						preventSmallerSize: {
							/**
							 * I​ ​w​a​n​t​ ​t​o​ ​p​r​e​v​e​n​t​ ​a​n​ ​e​l​e​m​e​n​t​ ​g​e​t​t​i​n​g​ ​s​m​a​l​l​e​r​ ​t​h​a​n​ ​a​ ​s​p​e​c​i​f​i​c​ ​s​i​z​e
							 */
							title: string
							/**
							 * p​r​e​v​e​n​t​-​s​i​z​e
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​f​l​e​x​-​i​t​e​m​-​w​i​d​t​h​s​/​s​m​a​l​l​e​r​-​s​i​z​e
							 */
							to: string
							answers: {
								'0': {
									/**
									 * m​i​n​-​w​i​d​t​h​ ​+​ ​r​e​m​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​o​r​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​%
									 */
									title: string
									/**
									 * F​l​e​x​ ​i​t​e​m​s​,​ ​b​y​ ​d​e​f​a​u​l​t​,​ ​w​i​l​l​ ​n​o​t​ ​g​r​o​w​,​ ​s​o​ ​n​o​r​m​a​l​l​y​ ​y​o​u​ ​o​n​l​y​ ​n​e​e​d​ ​t​h​i​s​ ​i​f​ ​y​o​u​ ​h​a​v​e​ ​d​e​c​l​a​r​e​d​ ​a​ ​f​l​e​x​-​g​r​o​w​ ​o​t​h​e​r​ ​t​h​a​n​ ​O​ ​o​n​ ​y​o​u​r​ ​f​l​e​x​ ​i​t​e​m​s​.​ ​I​n​ ​t​h​a​t​ ​s​c​e​n​a​r​i​o​,​ ​i​f​ ​t​h​e​y​ ​a​r​e​ ​a​l​l​o​w​e​d​ ​t​o​ ​g​r​o​w​,​ ​b​u​t​ ​i​f​ ​y​o​u​ ​a​l​s​o​ ​d​e​c​l​a​r​e​ ​a​ ​m​a​x​-​w​i​d​t​h​,​ ​t​h​e​y​ ​w​i​l​l​ ​n​o​t​ ​b​e​ ​a​b​l​e​ ​t​o​ ​g​r​o​w​ ​b​i​g​g​e​r​ ​t​h​a​n​ ​t​h​a​t​ ​s​i​z​e​.​ 
									 */
									description: string
								}
							}
						}
						specificSize: {
							/**
							 * I​ ​w​a​n​t​ ​a​n​ ​e​l​e​m​e​n​t​ ​t​o​ ​b​e​ ​a​ ​s​p​e​c​i​f​i​c​ ​s​i​z​e
							 */
							title: string
							/**
							 * s​p​e​c​i​f​i​c​-​s​i​z​e
							 */
							value: string
							hint: string
							/**
							 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​f​l​e​x​-​g​r​i​d​/​f​l​e​x​-​i​t​e​m​-​w​i​d​t​h​s​/​s​p​e​c​i​f​i​c​-​s​i​z​e
							 */
							to: string
							answers: {
								'0': {
									/**
									 * f​l​e​x​-​g​r​o​w​ ​a​n​d​ ​f​l​e​x​-​s​h​r​i​n​k​:​ ​0​ ​+​ ​p​x​ ​&​n​b​s​p​;​&​n​b​s​p​;​ ​ ​r​e​m​ ​&​n​b​s​p​;​ ​o​r​ ​&​n​b​s​p​;​ ​%​ 
									 */
									title: string
									/**
									 * F​l​e​x​ ​i​t​e​m​s​,​ ​b​y​ ​d​e​f​a​u​l​t​,​ ​w​i​l​l​ ​n​o​t​ ​g​r​o​w​,​ ​s​o​ ​n​o​r​m​a​l​l​y​ ​y​o​u​ ​o​n​l​y​ ​n​e​e​d​ ​t​h​i​s​ ​i​f​ ​y​o​u​ ​h​a​v​e​ ​d​e​c​l​a​r​e​d​ ​a​ ​f​l​e​x​-​g​r​o​w​ ​o​t​h​e​r​ ​t​h​a​n​ ​O​ ​o​n​ ​y​o​u​r​ ​f​l​e​x​ ​i​t​e​m​s​.​ ​I​n​ ​t​h​a​t​ ​s​c​e​n​a​r​i​o​,​ ​i​f​ ​t​h​e​y​ ​a​r​e​ ​a​l​l​o​w​e​d​ ​t​o​ ​g​r​o​w​,​ ​b​u​t​ ​i​f​ ​y​o​u​ ​a​l​s​o​ ​d​e​c​l​a​r​e​ ​a​ ​m​a​x​-​w​i​d​t​h​,​ ​t​h​e​y​ ​w​i​l​l​ ​n​o​t​ ​b​e​ ​a​b​l​e​ ​t​o​ ​g​r​o​w​ ​b​i​g​g​e​r​ ​t​h​a​n​ ​t​h​a​t​ ​s​i​z​e​.​ 
									 */
									description: string
								}
							}
						}
					}
				}
			}
		}
		whichWidthOrHeight: {
			/**
			 * w​i​d​t​h​ ​o​r​ ​h​e​i​g​h​t​?
			 */
			title: string
			questions: {
				items: {
					width: {
						/**
						 * w​i​d​t​h
						 */
						title: string
						/**
						 * w​i​d​t​h
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s
						 */
						to: string
					}
					height: {
						/**
						 * h​e​i​g​h​t
						 */
						title: string
						/**
						 * h​e​i​g​h​t
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t
						 */
						to: string
					}
				}
			}
			typeOFHeights: {
				items: {
					'0': {
						/**
						 * m​i​n​-​h​e​i​g​h​t
						 */
						title: string
						/**
						 * m​i​n​-​h​e​i​g​h​t
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t​/​m​i​n​-​h​e​i​g​h​t
						 */
						to: string
					}
					'1': {
						/**
						 * m​a​x​-​h​e​i​g​h​t
						 */
						title: string
						/**
						 * m​a​x​-​h​e​i​g​h​t
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t​/​w​h​e​t​h​e​r​-​n​e​e​d
						 */
						to: string
					}
					'2': {
						/**
						 * h​e​i​g​h​t
						 */
						title: string
						/**
						 * h​e​i​g​h​t
						 */
						value: string
						hint: string
						/**
						 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/
						 */
						to: string
					}
				}
				fixedOrRelativeHeights: {
					questions: {
						/**
						 * D​o​e​s​ ​i​t​ ​n​e​e​d​ ​t​o​ ​b​e​ ​a​ ​f​i​x​e​d​ ​h​e​i​g​h​t​,​ ​o​r​ ​r​e​l​a​t​i​v​e​ ​t​o​ ​s​o​m​e​t​h​i​n​g​s​?​ 
						 */
						title: string
						items: {
							fixedSize: {
								/**
								 * f​i​x​e​d​ ​s​i​z​e
								 */
								title: string
								/**
								 * f​i​x​e​d​-​s​i​z​e
								 */
								value: string
								hint: string
								/**
								 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t​/​m​i​n​-​h​e​i​g​h​t​/​f​i​x​e​d​-​s​i​z​e​2
								 */
								to: string
								answers: {
									'0': {
										/**
										 * p​x​ ​&​n​b​s​p​;​ ​r​e​m​ 
										 */
										title: string
										/**
										 *  
										 */
										description: string
									}
								}
							}
							relativeHeight: {
								/**
								 * r​e​l​a​t​i​v​e​ ​t​o​ ​t​h​e​ ​h​e​i​g​h​t​ ​o​f​ ​t​h​e​ ​a​n​o​t​h​e​r​ ​e​l​e​m​e​n​t
								 */
								title: string
								/**
								 * r​e​l​a​t​i​v​e​-​h​e​i​g​h​t
								 */
								value: string
								hint: string
								/**
								 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t​/​m​i​n​-​h​e​i​g​h​t​/​r​e​l​a​t​i​v​e​-​h​e​i​g​h​t
								 */
								to: string
								answers: {
									'0': {
										/**
										 * %​ 
										 */
										title: string
										/**
										 * B​u​t​ ​t​h​i​s​ ​c​a​n​ ​b​e​ ​t​r​i​c​k​y​,​ ​b​e​c​a​u​s​e​ ​t​h​e​n​ ​<​a​ ​h​r​e​f​=​'​h​t​t​p​s​:​/​/​w​w​w​.​y​o​u​t​u​b​e​.​c​o​m​/​w​a​t​c​h​?​v​=​S​j​Y​Y​f​d​7​o​b​u​g​'​ ​t​a​r​g​e​t​=​'​b​l​a​n​k​'​>​t​h​a​t​ ​e​l​e​m​e​n​t​ ​n​e​e​d​s​ ​a​ ​d​e​c​l​a​r​e​d​ ​h​e​i​g​h​t​ ​i​n​ ​i​t​ ​a​s​ ​w​e​l​l​<​/​a​>​.
										 */
										description: string
									}
								}
							}
							relativeViewport: {
								/**
								 * r​e​l​a​t​i​v​e​ ​t​o​ ​t​h​e​ ​v​i​e​w​p​o​r​t
								 */
								title: string
								/**
								 * r​e​l​a​t​i​v​e​-​v​i​e​w​p​o​r​t
								 */
								value: string
								hint: string
								/**
								 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t​/​m​i​n​-​h​e​i​g​h​t​/​r​e​l​a​t​i​v​e​-​v​i​e​w​p​o​r​t
								 */
								to: string
								answers: {
									'0': {
										/**
										 * v​h​ ​&​n​b​s​p​;​ ​s​v​h​ ​&​n​b​s​p​;​ ​d​v​h​ ​&​n​b​s​p​;​ ​1​v​h​ 
										 */
										title: string
										/**
										 *  ​T​h​e​s​e​ ​a​r​e​ ​a​l​l​ ​V​i​e​w​p​o​r​t​ ​H​e​i​g​h​t​ ​u​n​i​t​s​,​ ​w​i​t​h​ ​t​h​e​ ​f​i​r​s​t​ ​o​n​e​ ​b​e​i​n​g​ ​j​u​s​t​ ​t​h​a​t​,​ ​t​h​e​ ​s​e​c​o​n​d​ ​b​e​i​n​g​ ​t​h​e​ ​s​m​a​l​l​ ​v​i​e​w​p​o​r​t​ ​h​e​i​g​h​t​,​ ​t​h​e​n​ ​t​h​e​ ​d​y​n​a​m​i​c​ ​v​i​e​w​p​o​r​t​ ​h​e​i​g​h​t​.​ ​I​f​ ​y​o​u​'​r​e​ ​u​n​f​a​m​i​l​i​a​r​ ​w​i​t​h​ ​t​h​e​s​e​,​ ​y​o​u​ ​c​a​n​ ​<​a​ ​h​r​e​f​=​'​h​t​t​p​s​:​/​/​w​w​w​.​y​o​u​t​u​b​e​.​c​o​m​/​w​a​t​c​h​?​v​=​r​u​3​U​8​M​H​b​F​F​I​'​ ​t​a​r​g​e​t​=​'​b​l​a​n​k​'​>​l​e​a​r​n​ ​m​o​r​e​ ​a​b​o​u​t​ ​t​h​e​m​ ​i​n​ ​t​h​i​s​ ​v​i​d​e​o​<​/​a​>​.
										 */
										description: string
									}
								}
							}
						}
					}
				}
				whetherYOuNeed: {
					questions: {
						/**
						 * Y​o​u​ ​y​o​u​ ​a​b​s​o​l​u​t​e​l​y​ ​s​u​r​e​ ​y​o​u​ ​n​e​e​d​ ​o​n​e​?
						 */
						title: string
						items: {
							'0': {
								/**
								 * Y​e​s
								 */
								title: string
								/**
								 * y​e​s
								 */
								value: string
								hint: string
								/**
								 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t​/​w​h​e​t​h​e​r​-​n​e​e​d​/​f​i​x​e​d​-​o​r​-​n​o​t
								 */
								to: string
							}
							'1': {
								/**
								 * U​h​h​,​ ​I​ ​t​h​i​n​k​ ​s​o​?
								 */
								title: string
								/**
								 * t​h​i​n​k​-​s​o
								 */
								value: string
								hint: string
								/**
								 * /​q​u​e​s​t​i​o​n​a​r​i​e​s
								 */
								to: string
							}
						}
					}
					fixedOrNot: {
						/**
						 * H​a​v​i​n​g​ ​a​ ​f​i​x​e​d​ ​h​e​i​g​h​t​ ​(​i​n​c​l​u​d​i​n​g​ ​a​ ​f​i​x​e​d​ ​m​a​x​-​h​e​i​g​h​t​)​ ​o​f​t​e​n​ ​l​e​a​d​s​ ​t​o​ ​o​v​e​r​f​l​o​w​ ​i​s​s​u​e​s​.​ ​N​o​t​ ​d​e​c​l​a​r​i​n​g​ ​a​ ​h​e​i​g​h​t​ ​i​s​ ​o​f​t​e​n​ ​b​e​s​t​ ​a​s​ ​<​a​ ​h​r​e​f​=​"​"​ ​t​a​r​g​e​t​=​b​l​a​n​k​>​t​h​e​ ​d​e​f​a​u​l​t​ ​b​e​h​a​v​i​o​r​ ​<​/​a​>​ ​i​s​ ​p​r​e​t​t​y​ ​g​r​e​a​t​.​ 
						 */
						title: string
						items: {
							'0': {
								/**
								 *  ​I​ ​r​e​a​l​l​y​ ​d​o​ ​n​e​e​d​ ​t​o​ ​d​e​c​l​a​r​e​ ​o​n​e​ 
								 */
								title: string
								/**
								 * n​e​e​d​-​o​n​e
								 */
								value: string
								hint: string
								/**
								 * /​q​u​e​s​t​i​o​n​a​r​i​e​s​/​w​i​d​t​h​-​o​r​-​h​e​i​g​h​t​/​t​y​p​e​-​o​f​-​h​e​i​g​h​t​/​m​i​n​-​h​e​i​g​h​t
								 */
								to: string
							}
							'1': {
								/**
								 * I​ ​g​u​e​s​s​ ​I​ ​d​o​n​'​t​ ​n​e​e​d​ ​t​o​ ​b​o​t​h​e​r
								 */
								title: string
								/**
								 * d​o​'​t​-​n​e​e​d
								 */
								value: string
								hint: string
								/**
								 * /​q​u​e​s​t​i​o​n​a​r​i​e​s
								 */
								to: string
							}
						}
					}
				}
			}
		}
	}
	errors: {
		/**
		 * S​o​m​e​t​h​i​n​g​ ​w​e​n​t​ ​w​r​o​n​g
		 */
		somethingWentWrong: string
	}
}

export type TranslationFunctions = {
	/**
	 * wtf-css-unit
	 */
	appName: () => LocalizedString
	/**
	 * wtf-css-unit - Figure out your CSS unit with ease. All you need to do is just answer some questions.
	 */
	title: () => LocalizedString
	/**
	 * wtf-css-unit is created by Shamim Hossain who is a full-stack developer and a tech enthusiast currently working as frontend lead @secureship inc. He loves to build products that help people to solve their problems. Sometimes finding the right css units can be a pain. This tool will help you to figure out the right css units for your project.
	 */
	description: () => LocalizedString
	/**
	 * CSS units tool, HTML SEO optimization, web design CSS units, CSS unit converter, responsive design units, pixel to em converter, CSS length units, web development tools, CSS best practices, HTML coding tips, web design optimization, pixel conversion tool, EM and REM units, CSS measurement guide, design unit calculator, responsive web units, CSS layout tips, web development resources, HTML coding optimization, pixel-perfect design, wtf-css-unit
	 */
	keywords: () => LocalizedString
	/**
	 * @shamscorner
	 */
	appTwitterAccount: () => LocalizedString
	common: {
		/**
		 * etc
		 */
		etc: () => LocalizedString
		/**
		 * and many more...
		 */
		andManyMore: () => LocalizedString
		/**
		 * Figure out your CSS unit with ease. All you need to do is just answer some questions.
		 */
		slogan: () => LocalizedString
		/**
		 * Show
		 */
		show: () => LocalizedString
		/**
		 * Hide
		 */
		hide: () => LocalizedString
		/**
		 * Yes
		 */
		yes: () => LocalizedString
		/**
		 * No
		 */
		no: () => LocalizedString
		/**
		 * Reset
		 */
		reset: () => LocalizedString
		/**
		 * Back
		 */
		back: () => LocalizedString
	}
	appLogo: {
		/**
		 * wtf-css-unit is created by Shamim Hossain who is a full-stack developer and a tech enthusiast currently working as frontend lead @secureship inc. He loves to build products that help people to solve their problems. Sometimes finding the right css units can be a pain. This tool will help you to figure out the right css units for your project.
		 */
		hrefTitle: () => LocalizedString
		/**
		 * wtf-css-unit Logo
		 */
		alt: () => LocalizedString
	}
	schemaMarkup: {
		/**
		 * Corporation
		 */
		type: () => LocalizedString
		/**
		 * shamscorner
		 */
		name: () => LocalizedString
		/**
		 * wtf-css-unit is created by Shamim Hossain who is a full-stack developer and a tech enthusiast currently working as frontend lead @secureship inc. He loves to build products that help people to solve their problems. Sometimes finding the right css units can be a pain. This tool will help you to figure out the right css units for your project.
		 */
		markupDescription: () => LocalizedString
		founder: {
			'0': {
				/**
				 * Person
				 */
				type: () => LocalizedString
				/**
				 * Shamim Hossain
				 */
				name: () => LocalizedString
			}
		}
		/**
		 * 2021-07-04
		 */
		foundingDate: () => LocalizedString
		contactPoint: {
			'0': {
				/**
				 * ContactPoint
				 */
				type: () => LocalizedString
				/**
				 * hossains159@gmail.com
				 */
				email: () => LocalizedString
				telephone: () => LocalizedString
				/**
				 * customer service
				 */
				contactType: () => LocalizedString
			}
		}
	}
	errorPage: {
		/**
		 * 404
		 */
		title: () => LocalizedString
		/**
		 * Not found
		 */
		subtitle: () => LocalizedString
		/**
		 * 404
		 */
		pageTitle: () => LocalizedString
		/**
		 * Looking for help? Reach out to me at hossains159@gmail.com
		 */
		description: () => LocalizedString
		/**
		 * Support, Contact, Help, 404, Not found
		 */
		keywords: () => LocalizedString
	}
	onboarding: {
		/**
		 * Hi, I'm <span class="font-semibold">Shamim Hossain</span>
		 */
		greeting: () => LocalizedString
		/**
		 * Answer some questions and I will help you to figure out the right CSS unit for your project.
		 */
		title: () => LocalizedString
		/**
		 * Assuming you are only using these units for web development, not for print media.
		 */
		subtitle: () => LocalizedString
		callToAction: {
			/**
			 * Let's Start
			 */
			letsStart: () => LocalizedString
		}
	}
	questionaries: {
		whatDeclaring: {
			/**
			 * What are you declaring?
			 */
			title: () => LocalizedString
			items: {
				'0': {
					/**
					 * Font size
					 */
					title: () => LocalizedString
					/**
					 * font-size
					 */
					value: () => LocalizedString
					hint: () => LocalizedString
					/**
					 * /questionaries/font-size
					 */
					to: () => LocalizedString
				}
				'1': {
					/**
					 * Spacing
					 */
					title: () => LocalizedString
					/**
					 * spacing
					 */
					value: () => LocalizedString
					/**
					 * Margin, padding, gap, etc.
					 */
					hint: () => LocalizedString
					/**
					 * /questionaries/spacing
					 */
					to: () => LocalizedString
				}
				'2': {
					/**
					 * Positioning
					 */
					title: () => LocalizedString
					/**
					 * positioning
					 */
					value: () => LocalizedString
					/**
					 * Top, right, bottom, left, etc.
					 */
					hint: () => LocalizedString
					/**
					 * /questionaries/positioning
					 */
					to: () => LocalizedString
				}
				'3': {
					/**
					 * Details/effects
					 */
					title: () => LocalizedString
					/**
					 * details-effects
					 */
					value: () => LocalizedString
					/**
					 * Border, box-shadow, outlines, etc.
					 */
					hint: () => LocalizedString
					/**
					 * /questionaries/details-effects
					 */
					to: () => LocalizedString
				}
				'4': {
					/**
					 * Flex or grid
					 */
					title: () => LocalizedString
					/**
					 * flex-grid
					 */
					value: () => LocalizedString
					hint: () => LocalizedString
					/**
					 * /questionaries/flex-grid
					 */
					to: () => LocalizedString
				}
				'5': {
					/**
					 * Width or height on an element
					 */
					title: () => LocalizedString
					/**
					 * width-height
					 */
					value: () => LocalizedString
					hint: () => LocalizedString
					/**
					 * /questionaries/width-or-height
					 */
					to: () => LocalizedString
				}
			}
		}
		whichFontSize: {
			/**
			 * Which of these are you selecting to declare the font-size?
			 */
			title: () => LocalizedString
			question: {
				items: {
					htmlElement: {
						/**
						 * The <html> element
						 */
						title: () => LocalizedString
						/**
						 * html
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/font-size/html-set-here
						 */
						to: () => LocalizedString
					}
					bodyElement: {
						/**
						 * The <body> element
						 */
						title: () => LocalizedString
						/**
						 * body
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/font-size/responsive
						 */
						to: () => LocalizedString
					}
					textRelatedElement: {
						/**
						 * Text related element
						 */
						title: () => LocalizedString
						/**
						 * text-related
						 */
						value: () => LocalizedString
						/**
						 * <h1> - <h6>, <p>, <ol>, <ul>, etc.
						 */
						hint: () => LocalizedString
						/**
						 * /questionaries/font-size/text-related
						 */
						to: () => LocalizedString
						question: {
							/**
							 * Does the font-size need to be relative to another element?
							 */
							title: () => LocalizedString
							items: {
								no: {
									/**
									 * No, I guess not.
									 */
									title: () => LocalizedString
									/**
									 * no
									 */
									value: () => LocalizedString
									hint: () => LocalizedString
									/**
									 * /questionaries/font-size/responsive
									 */
									to: () => LocalizedString
								}
								yes: {
									/**
									 * Yes!
									 */
									title: () => LocalizedString
									/**
									 * yes
									 */
									value: () => LocalizedString
									hint: () => LocalizedString
									/**
									 * /questionaries/font-size/relative-to-parent
									 */
									to: () => LocalizedString
								}
							}
						}
					}
					inlineElement: {
						/**
						 * Inline element
						 */
						title: () => LocalizedString
						/**
						 * inline
						 */
						value: () => LocalizedString
						/**
						 * <a>, <span>, <strong>, etc.
						 */
						hint: () => LocalizedString
						/**
						 * /questionaries/font-size/relative-to-parent
						 */
						to: () => LocalizedString
					}
					layoutElement: {
						/**
						 * Layout element
						 */
						title: () => LocalizedString
						/**
						 * layout
						 */
						value: () => LocalizedString
						/**
						 * <div>, <nav>, <main>, <aside>, <footer>, etc.
						 */
						hint: () => LocalizedString
						/**
						 * /questionaries/font-size/html-set-here
						 */
						to: () => LocalizedString
					}
				}
			}
			htmlSetHere: {
				question: {
					/**
					 * Do you need to set a font-size here?
					 */
					title: () => LocalizedString
					items: {
						no: {
							/**
							 * No, I guess not.
							 */
							title: () => LocalizedString
							/**
							 * no
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/font-size/html-set-here/no
							 */
							to: () => LocalizedString
							answer: {
								'0': {
									title: () => LocalizedString
									/**
									 * You probably don't need to bother (and the 62.5% tends to be something you should avoid.)
									 */
									description: () => LocalizedString
								}
							}
						}
						yes: {
							/**
							 * Yes!
							 */
							title: () => LocalizedString
							/**
							 * yes
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/font-size/responsive
							 */
							to: () => LocalizedString
						}
					}
				}
			}
			responsive: {
				question: {
					/**
					 * Do you want it to be responsive?
					 */
					title: () => LocalizedString
					items: {
						no: {
							/**
							 * No!
							 */
							title: () => LocalizedString
							/**
							 * no
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/font-size/responsive/no
							 */
							to: () => LocalizedString
							answer: {
								'0': {
									/**
									 * rem
									 */
									title: () => LocalizedString
									/**
									 * Most of the time, you will probably use rem when declaring font sizes. It's easy to use, predictable, and very importantly, respects the users choice if they have made changes to their default font size at the OS or browser level.
									 */
									description: () => LocalizedString
								}
							}
						}
						yes: {
							/**
							 * Yes!
							 */
							title: () => LocalizedString
							/**
							 * yes
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/font-size/responsive/yes
							 */
							to: () => LocalizedString
							answer: {
								'0': {
									/**
									 * Clamp()
									 */
									title: () => LocalizedString
									/**
									 * You need 3 values for clamp, a minimum, "growth factor", and maximum. The minimum and maximum should probably be in rem and the growth factor a viewport unit, but also with rem added to it. For example: clamp(1.25rem, 7.5vw + .5rem, 2rem).<br><br>You can learn more about it <a href="https://www.youtube.com/watch?v=U9VF-4euyRo" target="_blank" rel="noopener noreferrer">in this video</a>. There is also a fantastic tool called <a href="https://utopia.fyi/type/calculator/" target="_blank" rel="noopener noreferrer">Utopia</a> that you can use to generate a responsive type scale.
									 */
									description: () => LocalizedString
								}
								'1': {
									/**
									 * cqi
									 */
									title: () => LocalizedString
									/**
									 * If you don't mind trying something that doesn't have the best browser support, you could substitute the `vw` unit with a `cqi`, which is a container query unit that gets the inline size of it's container. This does mean you need a container though. You can learn more about it <a href="https://www.youtube.com/watch?v=ZSaAHb5dRwQ" target="_blank" rel="noopener noreferrer">in this video</a>.
									 */
									description: () => LocalizedString
								}
							}
						}
					}
				}
			}
			relativeToParent: {
				question: {
					/**
					 * Do you want it to be relative to the font-size of the parent element, or something more precise?
					 */
					title: () => LocalizedString
					items: {
						fontSize: {
							/**
							 * The font-size
							 */
							title: () => LocalizedString
							/**
							 * font-size
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/font-size/relative-to-parent/font-size
							 */
							to: () => LocalizedString
							answer: {
								'0': {
									/**
									 * em
									 */
									title: () => LocalizedString
									/**
									 * The `em` unit, when used to declare font-size, will be relative it's ancestor's font-size.<br><br>For example, if you have a heading with a font-size of 3rem, and a span inside with a font-size of .5rem, the span will have a font-size of 1.5rem (3rem x .5).
									 */
									description: () => LocalizedString
								}
							}
						}
						morePrecise: {
							/**
							 * Something more precise
							 */
							title: () => LocalizedString
							/**
							 * more-precise
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/font-size/relative-to-parent/more-precise
							 */
							to: () => LocalizedString
							answer: {
								'0': {
									/**
									 * lh
									 */
									title: () => LocalizedString
									/**
									 * Line-height
									 */
									description: () => LocalizedString
								}
								'1': {
									/**
									 * ex
									 */
									title: () => LocalizedString
									/**
									 * Ex height
									 */
									description: () => LocalizedString
								}
								'2': {
									/**
									 * cap
									 */
									title: () => LocalizedString
									/**
									 * Cap height
									 */
									description: () => LocalizedString
								}
							}
						}
					}
				}
			}
		}
		whatSpacingTo: {
			/**
			 * What are you adding spacing to?
			 */
			title: () => LocalizedString
			questions: {
				items: {
					text: {
						/**
						 * Text
						 */
						title: () => LocalizedString
						/**
						 * text
						 */
						value: () => LocalizedString
						/**
						 * (like spacing between paragraphs)
						 */
						hint: () => LocalizedString
						/**
						 * /questionaries/spacing/text
						 */
						to: () => LocalizedString
						answers: {
							'0': {
								/**
								 * em &nbsp;&nbsp; rem
								 */
								title: () => LocalizedString
								/**
								 * There are times you can use rem as well, but by using em,you keep the spacing relative to the font size of the text, <a href="https://www.youtube.com/watch?v=Gx0iZrN-0L4" target="_blank" rel="noopener noreferrer">making for a better overall flow</a>.
								 */
								description: () => LocalizedString
							}
						}
					}
					padding: {
						/**
						 * Padding
						 */
						title: () => LocalizedString
						/**
						 * padding
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/spacing/space-for-fixed-size
						 */
						to: () => LocalizedString
					}
					spaceBetween: {
						/**
						 * Space between elements and/or components
						 */
						title: () => LocalizedString
						/**
						 * spaceBetween
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/spacing/space-for-fixed-size
						 */
						to: () => LocalizedString
					}
				}
			}
			spaceForFixedSize: {
				questions: {
					/**
					 * Do you want the space to be a fixed size?
					 */
					title: () => LocalizedString
					items: {
						no: {
							/**
							 * No
							 */
							title: () => LocalizedString
							/**
							 * no
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/spacing/space-for-fixed-size/no
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * vw/vh + main() &nbsp;&nbsp; clamp()
									 */
									title: () => LocalizedString
									/**
									 * You may want to adjust the size according to how much space is available, for example, having <a href="https://www.youtube.com/watch?v=7khSaA91e04" target="_blank" rel="noopener noreferrer">more padding at larger screen sizes</a>. In those cases we can use viewport units (container query units), but it's usually best to do so inside a clamp to avoid the spacing from getting too big or too small.
									 */
									description: () => LocalizedString
								}
							}
						}
						yes: {
							/**
							 * Yes
							 */
							title: () => LocalizedString
							/**
							 * yes
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/spacing/space-for-fixed-size/yes
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * em &nbsp;&nbsp; rem &nbsp;&nbsp; px
									 */
									title: () => LocalizedString
									/**
									 * It depends a lot on the use case. If you want a fixed value, rem or px are fine. If you want something that is a bit more adaptable, em is great. I love using it for buttons, so that the padding adjusts automatically if I make small and large variants by changing the font size.
									 */
									description: () => LocalizedString
								}
							}
						}
					}
				}
			}
		}
		whatPositionAndDetailsTo: {
			questions: {
				answers: {
					'0': {
						/**
						 * px &nbsp;&nbsp; rem
						 */
						title: () => LocalizedString
						/**
						 * px is probably find and can be easier for small adjustments, but if your're using rem for most things, you could stay with that for consistency. You can use em too, if you prefer.
						 */
						description: () => LocalizedString
					}
				}
			}
		}
		whichFlexOrGrid: {
			questions: {
				items: {
					'0': {
						/**
						 * a gap between the elements 
						 */
						title: () => LocalizedString
						/**
						 * gap-element
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/spacing/space-for-fixed-size
						 */
						to: () => LocalizedString
					}
					'1': {
						/**
						 * grid columns 
						 */
						title: () => LocalizedString
						/**
						 * grid-columns
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/flex-grid/grid-columns-rows/
						 */
						to: () => LocalizedString
					}
					'2': {
						/**
						 * grid rows 
						 */
						title: () => LocalizedString
						/**
						 * grid-rows
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/flex-grid/grid-columns-rows/
						 */
						to: () => LocalizedString
					}
					'3': {
						/**
						 * flex item widths 
						 */
						title: () => LocalizedString
						/**
						 * items-widths
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/flex-grid/flex-item-widths
						 */
						to: () => LocalizedString
					}
				}
			}
			fixedOrFluid: {
				questions: {
					/**
					 * Do you want them to be fixed sizes, of fluid? 
					 */
					title: () => LocalizedString
					items: {
						fixedSized: {
							/**
							 * Fixed sizes
							 */
							title: () => LocalizedString
							/**
							 * fixed-size
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/flex-grid/grid-columns-rows/fixed-sizes
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * px &nbsp;&nbsp;rem
									 */
									title: () => LocalizedString
									/**
									 * px is probably fine, but if yo're using rem for most things,you could stay with that for consistency. 
									 */
									description: () => LocalizedString
								}
							}
						}
						fluid: {
							/**
							 * Fluid
							 */
							title: () => LocalizedString
							/**
							 * fluid
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/flex-grid/grid-columns-rows/fluid
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * fr
									 */
									title: () => LocalizedString
									/**
									 * The fr unit uses the leftover space. If you have three columns each with 1fr, they will adapt to whatever space is available, and generally all be the same size. It tends to be the best choice. % can also work, but can lead to overflow if you don't take into account gaps, whereas fr avoids that issue. 
									 */
									description: () => LocalizedString
								}
							}
						}
						someFixedFluid: {
							/**
							 * Some fixed, some fluid
							 */
							title: () => LocalizedString
							/**
							 * fixed-fluid
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/flex-grid/grid-columns-rows/some-fixed-fluid
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * fr &nbsp;&nbsp;px &nbsp;&nbsp;rem &nbsp;&nbsp;auto &nbsp;&nbsp;min-content 
									 */
									title: () => LocalizedString
									/**
									 *  The fluid stuff can use fr to take up available space, or auto or min-content if you want it to match the size of the content in a given column/row.Other parts can be defined with px or rem, if you want fixed sizes.
									 */
									description: () => LocalizedString
								}
							}
						}
					}
				}
			}
			flexItemsWidths: {
				questions: {
					/**
					 * Flex item sizing can be hard, but that's sort of the point of using flex, we want things to be flexible. what do you prefer?
					 */
					title: () => LocalizedString
					items: {
						preventLargerSize: {
							/**
							 * I want to prevent an element getting larger than a specific size
							 */
							title: () => LocalizedString
							/**
							 * prevent-size
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/flex-grid/flex-item-widths/larger-size
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * max-width  + px&nbsp;&nbsp; rem &nbsp;&nbsp; or &nbsp;&nbsp; %
									 */
									title: () => LocalizedString
									/**
									 * Flex items, by default, will not grow, so normally you only need this if you have declared a flex-grow other than O on your flex items. In that scenario, if they are allowed to grow, but if you also declare a max-width, they will not be able to grow bigger than that size. 
									 */
									description: () => LocalizedString
								}
							}
						}
						preventSmallerSize: {
							/**
							 * I want to prevent an element getting smaller than a specific size
							 */
							title: () => LocalizedString
							/**
							 * prevent-size
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/flex-grid/flex-item-widths/smaller-size
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * min-width + rem &nbsp;&nbsp; or &nbsp;&nbsp; %
									 */
									title: () => LocalizedString
									/**
									 * Flex items, by default, will not grow, so normally you only need this if you have declared a flex-grow other than O on your flex items. In that scenario, if they are allowed to grow, but if you also declare a max-width, they will not be able to grow bigger than that size. 
									 */
									description: () => LocalizedString
								}
							}
						}
						specificSize: {
							/**
							 * I want an element to be a specific size
							 */
							title: () => LocalizedString
							/**
							 * specific-size
							 */
							value: () => LocalizedString
							hint: () => LocalizedString
							/**
							 * /questionaries/flex-grid/flex-item-widths/specific-size
							 */
							to: () => LocalizedString
							answers: {
								'0': {
									/**
									 * flex-grow and flex-shrink: 0 + px &nbsp;&nbsp;  rem &nbsp; or &nbsp; % 
									 */
									title: () => LocalizedString
									/**
									 * Flex items, by default, will not grow, so normally you only need this if you have declared a flex-grow other than O on your flex items. In that scenario, if they are allowed to grow, but if you also declare a max-width, they will not be able to grow bigger than that size. 
									 */
									description: () => LocalizedString
								}
							}
						}
					}
				}
			}
		}
		whichWidthOrHeight: {
			/**
			 * width or height?
			 */
			title: () => LocalizedString
			questions: {
				items: {
					width: {
						/**
						 * width
						 */
						title: () => LocalizedString
						/**
						 * width
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries
						 */
						to: () => LocalizedString
					}
					height: {
						/**
						 * height
						 */
						title: () => LocalizedString
						/**
						 * height
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/width-or-height/type-of-height
						 */
						to: () => LocalizedString
					}
				}
			}
			typeOFHeights: {
				items: {
					'0': {
						/**
						 * min-height
						 */
						title: () => LocalizedString
						/**
						 * min-height
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/width-or-height/type-of-height/min-height
						 */
						to: () => LocalizedString
					}
					'1': {
						/**
						 * max-height
						 */
						title: () => LocalizedString
						/**
						 * max-height
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/width-or-height/type-of-height/whether-need
						 */
						to: () => LocalizedString
					}
					'2': {
						/**
						 * height
						 */
						title: () => LocalizedString
						/**
						 * height
						 */
						value: () => LocalizedString
						hint: () => LocalizedString
						/**
						 * /questionaries/
						 */
						to: () => LocalizedString
					}
				}
				fixedOrRelativeHeights: {
					questions: {
						/**
						 * Does it need to be a fixed height, or relative to somethings? 
						 */
						title: () => LocalizedString
						items: {
							fixedSize: {
								/**
								 * fixed size
								 */
								title: () => LocalizedString
								/**
								 * fixed-size
								 */
								value: () => LocalizedString
								hint: () => LocalizedString
								/**
								 * /questionaries/width-or-height/type-of-height/min-height/fixed-size2
								 */
								to: () => LocalizedString
								answers: {
									'0': {
										/**
										 * px &nbsp; rem 
										 */
										title: () => LocalizedString
										/**
										 *  
										 */
										description: () => LocalizedString
									}
								}
							}
							relativeHeight: {
								/**
								 * relative to the height of the another element
								 */
								title: () => LocalizedString
								/**
								 * relative-height
								 */
								value: () => LocalizedString
								hint: () => LocalizedString
								/**
								 * /questionaries/width-or-height/type-of-height/min-height/relative-height
								 */
								to: () => LocalizedString
								answers: {
									'0': {
										/**
										 * % 
										 */
										title: () => LocalizedString
										/**
										 * But this can be tricky, because then <a href='https://www.youtube.com/watch?v=SjYYfd7obug' target='blank'>that element needs a declared height in it as well</a>.
										 */
										description: () => LocalizedString
									}
								}
							}
							relativeViewport: {
								/**
								 * relative to the viewport
								 */
								title: () => LocalizedString
								/**
								 * relative-viewport
								 */
								value: () => LocalizedString
								hint: () => LocalizedString
								/**
								 * /questionaries/width-or-height/type-of-height/min-height/relative-viewport
								 */
								to: () => LocalizedString
								answers: {
									'0': {
										/**
										 * vh &nbsp; svh &nbsp; dvh &nbsp; 1vh 
										 */
										title: () => LocalizedString
										/**
										 *  These are all Viewport Height units, with the first one being just that, the second being the small viewport height, then the dynamic viewport height. If you're unfamiliar with these, you can <a href='https://www.youtube.com/watch?v=ru3U8MHbFFI' target='blank'>learn more about them in this video</a>.
										 */
										description: () => LocalizedString
									}
								}
							}
						}
					}
				}
				whetherYOuNeed: {
					questions: {
						/**
						 * You you absolutely sure you need one?
						 */
						title: () => LocalizedString
						items: {
							'0': {
								/**
								 * Yes
								 */
								title: () => LocalizedString
								/**
								 * yes
								 */
								value: () => LocalizedString
								hint: () => LocalizedString
								/**
								 * /questionaries/width-or-height/type-of-height/whether-need/fixed-or-not
								 */
								to: () => LocalizedString
							}
							'1': {
								/**
								 * Uhh, I think so?
								 */
								title: () => LocalizedString
								/**
								 * think-so
								 */
								value: () => LocalizedString
								hint: () => LocalizedString
								/**
								 * /questionaries
								 */
								to: () => LocalizedString
							}
						}
					}
					fixedOrNot: {
						/**
						 * Having a fixed height (including a fixed max-height) often leads to overflow issues. Not declaring a height is often best as <a href="" target=blank>the default behavior </a> is pretty great. 
						 */
						title: () => LocalizedString
						items: {
							'0': {
								/**
								 *  I really do need to declare one 
								 */
								title: () => LocalizedString
								/**
								 * need-one
								 */
								value: () => LocalizedString
								hint: () => LocalizedString
								/**
								 * /questionaries/width-or-height/type-of-height/min-height
								 */
								to: () => LocalizedString
							}
							'1': {
								/**
								 * I guess I don't need to bother
								 */
								title: () => LocalizedString
								/**
								 * do't-need
								 */
								value: () => LocalizedString
								hint: () => LocalizedString
								/**
								 * /questionaries
								 */
								to: () => LocalizedString
							}
						}
					}
				}
			}
		}
	}
	errors: {
		/**
		 * Something went wrong
		 */
		somethingWentWrong: () => LocalizedString
	}
}

export type Formatters = {}
